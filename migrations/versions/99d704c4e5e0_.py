"""empty message

Revision ID: 99d704c4e5e0
Revises: 
Create Date: 2025-08-14 16:12:00.882067

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '99d704c4e5e0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categorie_offre',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=120), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nom')
    )
    with op.batch_alter_table('categorie_offre', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_categorie_offre_slug'), ['slug'], unique=True)

    op.create_table('secteur',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=120), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nom')
    )
    with op.batch_alter_table('secteur', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_secteur_slug'), ['slug'], unique=True)

    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=50), nullable=False),
    sa.Column('slug', sa.String(length=80), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nom')
    )
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tag_slug'), ['slug'], unique=True)

    op.create_table('utilisateur',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('mot_de_passe', sa.String(length=255), nullable=False),
    sa.Column('telephone', sa.String(length=20), nullable=True),
    sa.Column('ville', sa.String(length=100), nullable=True),
    sa.Column('commune', sa.String(length=100), nullable=True),
    sa.Column('date_inscription', sa.DateTime(), nullable=True),
    sa.Column('avatar', sa.String(length=250), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('actif', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('telephone')
    )
    op.create_table('categorie_partenaire',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=120), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('secteur_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['secteur_id'], ['secteur.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nom')
    )
    with op.batch_alter_table('categorie_partenaire', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_categorie_partenaire_slug'), ['slug'], unique=True)

    op.create_table('partenaire',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False),
    sa.Column('secteur_id', sa.Integer(), nullable=False),
    sa.Column('categorie_partenaire_id', sa.Integer(), nullable=False),
    sa.Column('localisation', sa.String(length=150), nullable=True),
    sa.Column('ville', sa.String(length=100), nullable=True),
    sa.Column('commune', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('contact', sa.String(length=100), nullable=True),
    sa.Column('date_inscription', sa.DateTime(), nullable=True),
    sa.Column('logo', sa.String(length=250), nullable=True),
    sa.Column('url', sa.String(length=250), nullable=True),
    sa.Column('reseaux', sa.JSON(), nullable=True),
    sa.Column('note_moyenne', sa.Float(), nullable=True),
    sa.Column('photos', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['categorie_partenaire_id'], ['categorie_partenaire.id'], name='fk_partenaire_categorie'),
    sa.ForeignKeyConstraint(['secteur_id'], ['secteur.id'], name='fk_partenaire_secteur'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('abonnement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('partenaire_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('basique', 'premium', name='type_abonnement'), nullable=False),
    sa.Column('date_debut', sa.DateTime(), nullable=True),
    sa.Column('date_fin', sa.DateTime(), nullable=True),
    sa.Column('actif', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['partenaire_id'], ['partenaire.id'], name='fk_abonnement_partenaire'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('avis_partenaire',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilisateur_id', sa.Integer(), nullable=False),
    sa.Column('partenaire_id', sa.Integer(), nullable=False),
    sa.Column('note', sa.Integer(), nullable=False),
    sa.Column('commentaire', sa.Text(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('visible', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['partenaire_id'], ['partenaire.id'], name='fk_avis_partenaire'),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateur.id'], name='fk_avis_utilisateur'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('offre',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('titre', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('prix', sa.Float(), nullable=True),
    sa.Column('type_offre', sa.String(length=50), nullable=True),
    sa.Column('ville', sa.String(length=100), nullable=True),
    sa.Column('commune', sa.String(length=100), nullable=True),
    sa.Column('image_banniere', sa.String(length=250), nullable=True),
    sa.Column('condition', sa.Text(), nullable=True),
    sa.Column('lien_externe', sa.String(length=250), nullable=True),
    sa.Column('expire_le', sa.DateTime(), nullable=True),
    sa.Column('ambiance', sa.String(length=100), nullable=True),
    sa.Column('localisation', sa.String(length=150), nullable=True),
    sa.Column('date_publication', sa.DateTime(), nullable=True),
    sa.Column('vues', sa.Integer(), nullable=True),
    sa.Column('clics', sa.Integer(), nullable=True),
    sa.Column('favoris_count', sa.Integer(), nullable=True),
    sa.Column('popularite', sa.Integer(), nullable=True),
    sa.Column('categorie_offre_id', sa.Integer(), nullable=True),
    sa.Column('partenaire_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['categorie_offre_id'], ['categorie_offre.id'], ),
    sa.ForeignKeyConstraint(['partenaire_id'], ['partenaire.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('titre', 'partenaire_id', name='uq_offre_titre_partenaire')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('offre')
    op.drop_table('avis_partenaire')
    op.drop_table('abonnement')
    op.drop_table('partenaire')
    with op.batch_alter_table('categorie_partenaire', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_categorie_partenaire_slug'))

    op.drop_table('categorie_partenaire')
    op.drop_table('utilisateur')
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tag_slug'))

    op.drop_table('tag')
    with op.batch_alter_table('secteur', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_secteur_slug'))

    op.drop_table('secteur')
    with op.batch_alter_table('categorie_offre', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_categorie_offre_slug'))

    op.drop_table('categorie_offre')
    # ### end Alembic commands ###
